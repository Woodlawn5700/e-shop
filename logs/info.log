2016-10-23 17:51:01,106 [ INFO] factory.Factory Create new Session Factory at factory.Factory.getSessionFactory(Factory.java:58)
2016-10-23 17:51:01,118 [ INFO] DAO.implementation.ObjectDaoImpl Get the class type at DAO.implementation.ObjectDaoImpl.<init>(ObjectDaoImpl.java:34)
2016-10-23 17:51:01,120 [ INFO] DAO.implementation.ProductDaoImpl Create Product Dao at DAO.implementation.ProductDaoImpl.<init>(ProductDaoImpl.java:20)
2016-10-23 17:51:01,121 [ INFO] factory.Factory realize Product Dao methods at factory.Factory.getProductDaoImpl(Factory.java:159)
2016-10-23 17:51:01,651 [ INFO] org.hibernate.jpa.internal.util.LogHelper HHH000204: Processing PersistenceUnitInfo [
	name: SchoolPU
	...] at org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
2016-10-23 17:51:02,164 [ INFO] org.hibernate.Version HHH000412: Hibernate Core {5.1.0.Final} at org.hibernate.Version.logVersion(Version.java:37)
2016-10-23 17:51:02,168 [ INFO] org.hibernate.cfg.Environment HHH000206: hibernate.properties not found at org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
2016-10-23 17:51:02,172 [ INFO] org.hibernate.cfg.Environment HHH000021: Bytecode provider name : javassist at org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
2016-10-23 17:51:02,261 [ INFO] org.hibernate.annotations.common.Version HCANN000001: Hibernate Commons Annotations {5.0.1.Final} at org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
2016-10-23 17:51:02,809 [ INFO] org.hibernate.orm.connections HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/t_systems_progect] at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)
2016-10-23 17:51:02,811 [ INFO] org.hibernate.orm.connections HHH10001001: Connection properties: {user=root, password=****} at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:136)
2016-10-23 17:51:02,811 [ INFO] org.hibernate.orm.connections HHH10001003: Autocommit mode: false at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)
2016-10-23 17:51:02,817 [ INFO] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl HHH000115: Hibernate connection pool size: 20 (min=1) at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)
2016-10-23 17:51:04,228 [ INFO] org.hibernate.dialect.Dialect HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect at org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
2016-10-23 17:51:07,212 [ INFO] org.hibernate.hql.internal.QueryTranslatorFactoryInitiator HHH000397: Using ASTQueryTranslatorFactory at org.hibernate.hql.internal.QueryTranslatorFactoryInitiator.initiateService(QueryTranslatorFactoryInitiator.java:47)
2016-10-23 17:51:07,746 [ INFO] DAO.implementation.ObjectDaoImpl List of Long order my products order at DAO.implementation.ObjectDaoImpl.getTopProductsCount(ObjectDaoImpl.java:534)
2016-10-23 17:51:07,747 [ INFO] service.ProductListService Got count Products and order by count at service.ProductListService.getCountOfUniqueProductsInOrderTable(ProductListService.java:98)
2016-10-23 17:51:07,754 [ INFO] factory.Factory Create new Session Factory at factory.Factory.getSessionFactory(Factory.java:58)
2016-10-23 17:51:07,754 [ INFO] DAO.implementation.ObjectDaoImpl Get the class type at DAO.implementation.ObjectDaoImpl.<init>(ObjectDaoImpl.java:34)
2016-10-23 17:51:07,755 [ INFO] DAO.implementation.ProductDaoImpl Create Product Dao at DAO.implementation.ProductDaoImpl.<init>(ProductDaoImpl.java:20)
2016-10-23 17:51:07,755 [ INFO] factory.Factory realize Product Dao methods at factory.Factory.getProductDaoImpl(Factory.java:159)
2016-10-23 17:51:07,953 [ INFO] DAO.implementation.ObjectDaoImpl Get all object from table Abstract class method at DAO.implementation.ObjectDaoImpl.getAllObjectsFromTable(ObjectDaoImpl.java:195)
2016-10-23 17:51:07,953 [ INFO] service.ProductListService Select all productsList at service.ProductListService.getAllProducts(ProductListService.java:27)
2016-10-24 01:16:22,214 [ INFO] DAO.implementation.ObjectDaoImpl Get the class type at DAO.implementation.ObjectDaoImpl.<init>(ObjectDaoImpl.java:34)
2016-10-24 01:16:22,220 [ INFO] DAO.implementation.ProductDaoImpl Create Product Dao at DAO.implementation.ProductDaoImpl.<init>(ProductDaoImpl.java:26)
2016-10-24 01:16:22,781 [ INFO] org.hibernate.jpa.internal.util.LogHelper HHH000204: Processing PersistenceUnitInfo [
	name: SchoolPU
	...] at org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
2016-10-24 01:16:23,107 [ INFO] org.hibernate.Version HHH000412: Hibernate Core {5.1.0.Final} at org.hibernate.Version.logVersion(Version.java:37)
2016-10-24 01:16:23,111 [ INFO] org.hibernate.cfg.Environment HHH000206: hibernate.properties not found at org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
2016-10-24 01:16:23,116 [ INFO] org.hibernate.cfg.Environment HHH000021: Bytecode provider name : javassist at org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
2016-10-24 01:16:23,278 [ INFO] org.hibernate.annotations.common.Version HCANN000001: Hibernate Commons Annotations {5.0.1.Final} at org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
2016-10-24 01:16:23,775 [ INFO] org.hibernate.orm.connections HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/t_systems_progect] at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)
2016-10-24 01:16:23,776 [ INFO] org.hibernate.orm.connections HHH10001001: Connection properties: {user=root, password=****} at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:136)
2016-10-24 01:16:23,777 [ INFO] org.hibernate.orm.connections HHH10001003: Autocommit mode: false at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)
2016-10-24 01:16:23,783 [ INFO] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl HHH000115: Hibernate connection pool size: 20 (min=1) at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)
2016-10-24 01:16:25,494 [ INFO] org.hibernate.dialect.Dialect HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect at org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
2016-10-24 01:16:27,117 [ INFO] org.hibernate.hql.internal.QueryTranslatorFactoryInitiator HHH000397: Using ASTQueryTranslatorFactory at org.hibernate.hql.internal.QueryTranslatorFactoryInitiator.initiateService(QueryTranslatorFactoryInitiator.java:47)
2016-10-24 01:16:27,392 [ INFO] DAO.implementation.ProductDaoImpl Get all object from table and order it by param Abstract class method at DAO.implementation.ProductDaoImpl.getProductBYTime(ProductDaoImpl.java:56)
2016-10-24 01:19:45,044 [ INFO] DAO.implementation.ObjectDaoImpl Get the class type at DAO.implementation.ObjectDaoImpl.<init>(ObjectDaoImpl.java:34)
2016-10-24 01:19:45,050 [ INFO] DAO.implementation.ProductDaoImpl Create Product Dao at DAO.implementation.ProductDaoImpl.<init>(ProductDaoImpl.java:26)
2016-10-24 01:19:45,459 [ INFO] org.hibernate.jpa.internal.util.LogHelper HHH000204: Processing PersistenceUnitInfo [
	name: SchoolPU
	...] at org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
2016-10-24 01:19:45,748 [ INFO] org.hibernate.Version HHH000412: Hibernate Core {5.1.0.Final} at org.hibernate.Version.logVersion(Version.java:37)
2016-10-24 01:19:45,751 [ INFO] org.hibernate.cfg.Environment HHH000206: hibernate.properties not found at org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
2016-10-24 01:19:45,759 [ INFO] org.hibernate.cfg.Environment HHH000021: Bytecode provider name : javassist at org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
2016-10-24 01:19:45,881 [ INFO] org.hibernate.annotations.common.Version HCANN000001: Hibernate Commons Annotations {5.0.1.Final} at org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
2016-10-24 01:19:46,312 [ INFO] org.hibernate.orm.connections HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/t_systems_progect] at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)
2016-10-24 01:19:46,313 [ INFO] org.hibernate.orm.connections HHH10001001: Connection properties: {user=root, password=****} at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:136)
2016-10-24 01:19:46,313 [ INFO] org.hibernate.orm.connections HHH10001003: Autocommit mode: false at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)
2016-10-24 01:19:46,317 [ INFO] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl HHH000115: Hibernate connection pool size: 20 (min=1) at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)
2016-10-24 01:19:47,929 [ INFO] org.hibernate.dialect.Dialect HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect at org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
2016-10-24 01:19:48,953 [ INFO] org.hibernate.hql.internal.QueryTranslatorFactoryInitiator HHH000397: Using ASTQueryTranslatorFactory at org.hibernate.hql.internal.QueryTranslatorFactoryInitiator.initiateService(QueryTranslatorFactoryInitiator.java:47)
2016-10-24 01:19:49,223 [ INFO] DAO.implementation.ProductDaoImpl Get all object from table and order it by param Abstract class method at DAO.implementation.ProductDaoImpl.getProductBYTime(ProductDaoImpl.java:56)
2016-10-24 03:42:43,655 [ INFO] factory.Factory Create new Session Factory at factory.Factory.getSessionFactory(Factory.java:58)
2016-10-24 03:42:43,670 [ INFO] DAO.implementation.ObjectDaoImpl Get the class type at DAO.implementation.ObjectDaoImpl.<init>(ObjectDaoImpl.java:34)
2016-10-24 03:42:43,671 [ INFO] DAO.implementation.ProductDaoImpl Create Product Dao at DAO.implementation.ProductDaoImpl.<init>(ProductDaoImpl.java:26)
2016-10-24 03:42:43,672 [ INFO] factory.Factory realize Product Dao methods at factory.Factory.getProductDaoImpl(Factory.java:159)
2016-10-24 03:42:43,923 [ INFO] org.hibernate.jpa.internal.util.LogHelper HHH000204: Processing PersistenceUnitInfo [
	name: SchoolPU
	...] at org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
2016-10-24 03:42:44,140 [ INFO] org.hibernate.Version HHH000412: Hibernate Core {5.1.0.Final} at org.hibernate.Version.logVersion(Version.java:37)
2016-10-24 03:42:44,143 [ INFO] org.hibernate.cfg.Environment HHH000206: hibernate.properties not found at org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
2016-10-24 03:42:44,146 [ INFO] org.hibernate.cfg.Environment HHH000021: Bytecode provider name : javassist at org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
2016-10-24 03:42:44,226 [ INFO] org.hibernate.annotations.common.Version HCANN000001: Hibernate Commons Annotations {5.0.1.Final} at org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
2016-10-24 03:42:44,553 [ INFO] org.hibernate.orm.connections HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/t_systems_progect] at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)
2016-10-24 03:42:44,554 [ INFO] org.hibernate.orm.connections HHH10001001: Connection properties: {user=root, password=****} at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:136)
2016-10-24 03:42:44,554 [ INFO] org.hibernate.orm.connections HHH10001003: Autocommit mode: false at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)
2016-10-24 03:42:44,558 [ INFO] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl HHH000115: Hibernate connection pool size: 20 (min=1) at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)
2016-10-24 03:42:45,946 [ INFO] org.hibernate.dialect.Dialect HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect at org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
2016-10-24 03:42:47,940 [ INFO] org.hibernate.hql.internal.QueryTranslatorFactoryInitiator HHH000397: Using ASTQueryTranslatorFactory at org.hibernate.hql.internal.QueryTranslatorFactoryInitiator.initiateService(QueryTranslatorFactoryInitiator.java:47)
2016-10-24 03:42:48,217 [ INFO] DAO.implementation.ObjectDaoImpl List of Long order my products order at DAO.implementation.ObjectDaoImpl.getTopProductsCount(ObjectDaoImpl.java:416)
2016-10-24 03:42:48,217 [ INFO] service.ProductListService Got count Products and order by count at service.ProductListService.getCountOfUniqueProductsInOrderTable(ProductListService.java:99)
2016-10-24 03:42:48,220 [ INFO] factory.Factory Create new Session Factory at factory.Factory.getSessionFactory(Factory.java:58)
2016-10-24 03:42:48,221 [ INFO] DAO.implementation.ObjectDaoImpl Get the class type at DAO.implementation.ObjectDaoImpl.<init>(ObjectDaoImpl.java:34)
2016-10-24 03:42:48,221 [ INFO] DAO.implementation.ProductDaoImpl Create Product Dao at DAO.implementation.ProductDaoImpl.<init>(ProductDaoImpl.java:26)
2016-10-24 03:42:48,222 [ INFO] factory.Factory realize Product Dao methods at factory.Factory.getProductDaoImpl(Factory.java:159)
2016-10-24 03:42:48,369 [ INFO] DAO.implementation.ObjectDaoImpl Get all object from table Abstract class method at DAO.implementation.ObjectDaoImpl.getAllObjectsFromTable(ObjectDaoImpl.java:195)
2016-10-24 03:42:48,369 [ INFO] service.ProductListService Select all productsList at service.ProductListService.getAllProducts(ProductListService.java:28)
2016-10-24 09:22:32,125 [ INFO] factory.Factory Create new Session Factory at factory.Factory.getSessionFactory(Factory.java:58)
2016-10-24 09:22:32,135 [ INFO] DAO.implementation.ObjectDaoImpl Get the class type at DAO.implementation.ObjectDaoImpl.<init>(ObjectDaoImpl.java:34)
2016-10-24 09:22:32,136 [ INFO] DAO.implementation.ProductDaoImpl Create Product Dao at DAO.implementation.ProductDaoImpl.<init>(ProductDaoImpl.java:26)
2016-10-24 09:22:32,137 [ INFO] factory.Factory realize Product Dao methods at factory.Factory.getProductDaoImpl(Factory.java:159)
2016-10-24 09:22:32,640 [ INFO] org.hibernate.jpa.internal.util.LogHelper HHH000204: Processing PersistenceUnitInfo [
	name: SchoolPU
	...] at org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
2016-10-24 09:22:32,794 [ INFO] org.hibernate.Version HHH000412: Hibernate Core {5.1.0.Final} at org.hibernate.Version.logVersion(Version.java:37)
2016-10-24 09:22:32,796 [ INFO] org.hibernate.cfg.Environment HHH000206: hibernate.properties not found at org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
2016-10-24 09:22:32,799 [ INFO] org.hibernate.cfg.Environment HHH000021: Bytecode provider name : javassist at org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
2016-10-24 09:22:32,907 [ INFO] org.hibernate.annotations.common.Version HCANN000001: Hibernate Commons Annotations {5.0.1.Final} at org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
2016-10-24 09:22:33,287 [ INFO] org.hibernate.orm.connections HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/t_systems_progect] at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)
2016-10-24 09:22:33,288 [ INFO] org.hibernate.orm.connections HHH10001001: Connection properties: {user=root, password=****} at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:136)
2016-10-24 09:22:33,289 [ INFO] org.hibernate.orm.connections HHH10001003: Autocommit mode: false at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)
2016-10-24 09:22:33,292 [ INFO] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl HHH000115: Hibernate connection pool size: 20 (min=1) at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)
2016-10-24 09:22:34,799 [ INFO] org.hibernate.dialect.Dialect HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect at org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
2016-10-24 09:22:36,401 [ INFO] org.hibernate.hql.internal.QueryTranslatorFactoryInitiator HHH000397: Using ASTQueryTranslatorFactory at org.hibernate.hql.internal.QueryTranslatorFactoryInitiator.initiateService(QueryTranslatorFactoryInitiator.java:47)
2016-10-24 09:22:36,714 [ INFO] DAO.implementation.ObjectDaoImpl List of Long order my products order at DAO.implementation.ObjectDaoImpl.getTopProductsCount(ObjectDaoImpl.java:416)
2016-10-24 09:22:36,714 [ INFO] service.ProductListService Got count Products and order by count at service.ProductListService.getCountOfUniqueProductsInOrderTable(ProductListService.java:99)
2016-10-24 09:22:36,717 [ INFO] factory.Factory Create new Session Factory at factory.Factory.getSessionFactory(Factory.java:58)
2016-10-24 09:22:36,718 [ INFO] DAO.implementation.ObjectDaoImpl Get the class type at DAO.implementation.ObjectDaoImpl.<init>(ObjectDaoImpl.java:34)
2016-10-24 09:22:36,719 [ INFO] DAO.implementation.ProductDaoImpl Create Product Dao at DAO.implementation.ProductDaoImpl.<init>(ProductDaoImpl.java:26)
2016-10-24 09:22:36,719 [ INFO] factory.Factory realize Product Dao methods at factory.Factory.getProductDaoImpl(Factory.java:159)
2016-10-24 09:22:36,968 [ INFO] DAO.implementation.ObjectDaoImpl Get all object from table Abstract class method at DAO.implementation.ObjectDaoImpl.getAllObjectsFromTable(ObjectDaoImpl.java:195)
2016-10-24 09:22:36,969 [ INFO] service.ProductListService Select all productsList at service.ProductListService.getAllProducts(ProductListService.java:28)
2016-10-24 09:34:34,054 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:34:34,062 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:34:34,063 [ INFO] service.ProductRegistrationService Quantity may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:47)
2016-10-24 09:35:32,608 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:35:32,617 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:35:32,618 [ INFO] service.ProductRegistrationService Quantity may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:47)
2016-10-24 09:37:27,959 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:37:27,966 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:37:27,966 [ INFO] service.ProductRegistrationService Quantity may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:47)
2016-10-24 09:37:27,967 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:37:27,968 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:37:27,968 [ INFO] service.ProductRegistrationService Price may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:61)
2016-10-24 09:38:43,768 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:38:43,774 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:38:43,775 [ INFO] service.ProductRegistrationService Quantity may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:47)
2016-10-24 09:38:43,775 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:38:43,776 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:38:43,777 [ INFO] service.ProductRegistrationService Price may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:61)
2016-10-24 09:38:43,777 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:38:43,778 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:38:43,778 [ INFO] service.ProductRegistrationService Quantity may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:47)
2016-10-24 09:38:43,779 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:38:43,780 [ INFO] service.ProductRegistrationService Price may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:55)
2016-10-24 09:38:58,146 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:38:58,152 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:38:58,152 [ INFO] service.ProductRegistrationService Quantity may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:47)
2016-10-24 09:38:58,153 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:38:58,153 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:38:58,153 [ INFO] service.ProductRegistrationService Price may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:61)
2016-10-24 09:38:58,153 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:38:58,154 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:38:58,154 [ INFO] service.ProductRegistrationService Quantity may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:47)
2016-10-24 09:39:14,198 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:39:14,208 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:39:14,208 [ INFO] service.ProductRegistrationService Quantity may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:47)
2016-10-24 09:39:14,209 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:39:14,210 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:39:14,210 [ INFO] service.ProductRegistrationService Price may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:61)
2016-10-24 09:39:14,211 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:40:01,633 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:40:01,641 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:40:01,642 [ INFO] service.ProductRegistrationService Quantity may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:47)
2016-10-24 09:40:01,642 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:40:01,643 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:40:01,644 [ INFO] service.ProductRegistrationService Price may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:61)
2016-10-24 09:40:01,646 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:40:01,647 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:40:01,648 [ INFO] service.ProductRegistrationService Quantity may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:47)
2016-10-24 09:40:45,797 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:40:45,804 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:40:45,805 [ INFO] service.ProductRegistrationService Quantity may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:47)
2016-10-24 09:40:45,805 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:40:45,806 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:40:45,806 [ INFO] service.ProductRegistrationService Price may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:61)
2016-10-24 09:40:45,807 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:40:45,808 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:40:45,809 [ INFO] service.ProductRegistrationService Quantity may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:47)
2016-10-24 09:41:00,468 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:41:00,474 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:41:00,474 [ INFO] service.ProductRegistrationService Quantity may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:47)
2016-10-24 09:41:00,475 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:41:00,476 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:41:00,476 [ INFO] service.ProductRegistrationService Price may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:61)
2016-10-24 09:41:00,476 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:41:45,196 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:41:45,203 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:41:45,204 [ INFO] service.ProductRegistrationService Quantity may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:47)
2016-10-24 09:41:45,205 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:41:45,205 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:41:45,206 [ INFO] service.ProductRegistrationService Price may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:61)
2016-10-24 09:41:45,206 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:41:45,210 [ INFO] httphendler.HttpResult Set data for Gson Object from servlet to client Page at httphendler.HttpResult.setData(HttpResult.java:89)
2016-10-24 09:42:02,943 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:42:02,948 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:42:02,949 [ INFO] service.ProductRegistrationService Quantity may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:47)
2016-10-24 09:42:02,949 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:42:02,950 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:42:02,950 [ INFO] service.ProductRegistrationService Price may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:61)
2016-10-24 09:42:02,950 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:42:02,954 [ INFO] httphendler.HttpResult Set data for Gson Object from servlet to client Page at httphendler.HttpResult.setData(HttpResult.java:89)
2016-10-24 09:43:27,893 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:43:27,899 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:43:27,900 [ INFO] service.ProductRegistrationService Quantity may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:47)
2016-10-24 09:43:27,901 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:43:27,902 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:43:27,902 [ INFO] service.ProductRegistrationService Price may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:61)
2016-10-24 09:43:27,903 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:43:27,905 [ INFO] httphendler.HttpResult Set data for Gson Object from servlet to client Page at httphendler.HttpResult.setData(HttpResult.java:89)
2016-10-24 09:43:38,870 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:43:38,876 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:43:38,876 [ INFO] service.ProductRegistrationService Quantity may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:47)
2016-10-24 09:43:38,876 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:43:38,877 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:43:38,877 [ INFO] service.ProductRegistrationService Price may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:61)
2016-10-24 09:43:38,878 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:43:38,880 [ INFO] httphendler.HttpResult Set data for Gson Object from servlet to client Page at httphendler.HttpResult.setData(HttpResult.java:89)
2016-10-24 09:44:10,348 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:44:10,355 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:44:10,355 [ INFO] service.ProductRegistrationService Quantity may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:47)
2016-10-24 09:44:10,356 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:44:10,356 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:44:10,357 [ INFO] service.ProductRegistrationService Please don't leave empty fields at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:75)
2016-10-24 09:45:08,553 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:45:08,559 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:45:08,561 [ INFO] service.ProductRegistrationService Quantity may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:47)
2016-10-24 09:45:08,563 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:45:08,563 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:45:08,564 [ INFO] service.ProductRegistrationService Please don't leave empty fields at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:75)
2016-10-24 09:45:30,553 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:45:30,567 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:45:30,569 [ INFO] service.ProductRegistrationService Quantity may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:47)
2016-10-24 09:45:30,569 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:45:30,570 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:45:30,571 [ INFO] service.ProductRegistrationService Price may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:61)
2016-10-24 09:46:08,170 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:46:08,179 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:46:08,179 [ INFO] service.ProductRegistrationService Quantity may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:47)
2016-10-24 09:46:08,180 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:46:08,181 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:46:08,181 [ INFO] service.ProductRegistrationService Price may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:61)
2016-10-24 09:46:08,182 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:46:08,194 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:46:08,200 [ INFO] service.ProductRegistrationService Please don't leave empty fields at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:75)
2016-10-24 09:48:31,976 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:48:31,982 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:48:31,983 [ INFO] service.ProductRegistrationService Quantity may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:47)
2016-10-24 09:48:31,983 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:48:31,984 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:48:31,984 [ INFO] service.ProductRegistrationService Price may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:61)
2016-10-24 09:48:31,985 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:48:31,985 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 09:48:31,985 [ INFO] service.ProductRegistrationService Please don't leave empty fields at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:75)
2016-10-24 13:56:41,641 [ INFO] factory.Factory Create new Session Factory at factory.Factory.getSessionFactory(Factory.java:58)
2016-10-24 13:56:41,650 [ INFO] DAO.implementation.ObjectDaoImpl Get the class type at DAO.implementation.ObjectDaoImpl.<init>(ObjectDaoImpl.java:34)
2016-10-24 13:56:41,650 [ INFO] DAO.implementation.ProductDaoImpl Create Product Dao at DAO.implementation.ProductDaoImpl.<init>(ProductDaoImpl.java:26)
2016-10-24 13:56:41,651 [ INFO] factory.Factory realize Product Dao methods at factory.Factory.getProductDaoImpl(Factory.java:159)
2016-10-24 13:56:42,156 [ INFO] org.hibernate.jpa.internal.util.LogHelper HHH000204: Processing PersistenceUnitInfo [
	name: SchoolPU
	...] at org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
2016-10-24 13:56:42,445 [ INFO] org.hibernate.Version HHH000412: Hibernate Core {5.1.0.Final} at org.hibernate.Version.logVersion(Version.java:37)
2016-10-24 13:56:42,450 [ INFO] org.hibernate.cfg.Environment HHH000206: hibernate.properties not found at org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
2016-10-24 13:56:42,454 [ INFO] org.hibernate.cfg.Environment HHH000021: Bytecode provider name : javassist at org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
2016-10-24 13:56:42,602 [ INFO] org.hibernate.annotations.common.Version HCANN000001: Hibernate Commons Annotations {5.0.1.Final} at org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
2016-10-24 13:56:43,250 [ INFO] org.hibernate.orm.connections HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/t_systems_progect] at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)
2016-10-24 13:56:43,321 [ INFO] org.hibernate.orm.connections HHH10001001: Connection properties: {user=root, password=****} at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:136)
2016-10-24 13:56:43,322 [ INFO] org.hibernate.orm.connections HHH10001003: Autocommit mode: false at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)
2016-10-24 13:56:43,336 [ INFO] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl HHH000115: Hibernate connection pool size: 20 (min=1) at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)
2016-10-24 13:56:45,594 [ INFO] org.hibernate.dialect.Dialect HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect at org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
2016-10-24 13:56:47,514 [ INFO] org.hibernate.hql.internal.QueryTranslatorFactoryInitiator HHH000397: Using ASTQueryTranslatorFactory at org.hibernate.hql.internal.QueryTranslatorFactoryInitiator.initiateService(QueryTranslatorFactoryInitiator.java:47)
2016-10-24 13:56:47,913 [ INFO] DAO.implementation.ObjectDaoImpl List of Long order my products order at DAO.implementation.ObjectDaoImpl.getTopProductsCount(ObjectDaoImpl.java:416)
2016-10-24 13:56:47,914 [ INFO] service.ProductListService Got count Products and order by count at service.ProductListService.getCountOfUniqueProductsInOrderTable(ProductListService.java:99)
2016-10-24 13:57:04,565 [ INFO] factory.Factory Create new Session Factory at factory.Factory.getSessionFactory(Factory.java:58)
2016-10-24 13:57:04,576 [ INFO] DAO.implementation.ObjectDaoImpl Get the class type at DAO.implementation.ObjectDaoImpl.<init>(ObjectDaoImpl.java:34)
2016-10-24 13:57:04,577 [ INFO] DAO.implementation.ProductDaoImpl Create Product Dao at DAO.implementation.ProductDaoImpl.<init>(ProductDaoImpl.java:26)
2016-10-24 13:57:04,577 [ INFO] factory.Factory realize Product Dao methods at factory.Factory.getProductDaoImpl(Factory.java:159)
2016-10-24 13:57:04,954 [ INFO] org.hibernate.jpa.internal.util.LogHelper HHH000204: Processing PersistenceUnitInfo [
	name: SchoolPU
	...] at org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
2016-10-24 13:57:05,139 [ INFO] org.hibernate.Version HHH000412: Hibernate Core {5.1.0.Final} at org.hibernate.Version.logVersion(Version.java:37)
2016-10-24 13:57:05,141 [ INFO] org.hibernate.cfg.Environment HHH000206: hibernate.properties not found at org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
2016-10-24 13:57:05,144 [ INFO] org.hibernate.cfg.Environment HHH000021: Bytecode provider name : javassist at org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
2016-10-24 13:57:05,264 [ INFO] org.hibernate.annotations.common.Version HCANN000001: Hibernate Commons Annotations {5.0.1.Final} at org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
2016-10-24 13:57:05,794 [ INFO] org.hibernate.orm.connections HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/t_systems_progect] at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)
2016-10-24 13:57:05,795 [ INFO] org.hibernate.orm.connections HHH10001001: Connection properties: {user=root, password=****} at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:136)
2016-10-24 13:57:05,796 [ INFO] org.hibernate.orm.connections HHH10001003: Autocommit mode: false at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)
2016-10-24 13:57:05,805 [ INFO] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl HHH000115: Hibernate connection pool size: 20 (min=1) at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)
2016-10-24 13:57:08,039 [ INFO] org.hibernate.dialect.Dialect HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect at org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
2016-10-24 13:57:10,137 [ INFO] org.hibernate.hql.internal.QueryTranslatorFactoryInitiator HHH000397: Using ASTQueryTranslatorFactory at org.hibernate.hql.internal.QueryTranslatorFactoryInitiator.initiateService(QueryTranslatorFactoryInitiator.java:47)
2016-10-24 13:57:10,500 [ INFO] DAO.implementation.ObjectDaoImpl List of Long order my products order at DAO.implementation.ObjectDaoImpl.getTopProductsCount(ObjectDaoImpl.java:416)
2016-10-24 13:57:10,503 [ INFO] service.ProductListService Got count Products and order by count at service.ProductListService.getCountOfUniqueProductsInOrderTable(ProductListService.java:99)
2016-10-24 14:31:54,603 [ INFO] factory.Factory Create new Session Factory at factory.Factory.getSessionFactory(Factory.java:58)
2016-10-24 14:31:54,611 [ INFO] DAO.implementation.ObjectDaoImpl Get the class type at DAO.implementation.ObjectDaoImpl.<init>(ObjectDaoImpl.java:34)
2016-10-24 14:31:54,612 [ INFO] DAO.implementation.OrderDaoImpl Create OrderDao at DAO.implementation.OrderDaoImpl.<init>(OrderDaoImpl.java:18)
2016-10-24 14:31:54,612 [ INFO] factory.Factory realize OrderDao methods at factory.Factory.getOrderDAOImpl(Factory.java:80)
2016-10-24 14:31:55,073 [ INFO] org.hibernate.jpa.internal.util.LogHelper HHH000204: Processing PersistenceUnitInfo [
	name: SchoolPU
	...] at org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
2016-10-24 14:31:55,351 [ INFO] org.hibernate.Version HHH000412: Hibernate Core {5.1.0.Final} at org.hibernate.Version.logVersion(Version.java:37)
2016-10-24 14:31:55,354 [ INFO] org.hibernate.cfg.Environment HHH000206: hibernate.properties not found at org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
2016-10-24 14:31:55,358 [ INFO] org.hibernate.cfg.Environment HHH000021: Bytecode provider name : javassist at org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
2016-10-24 14:31:55,460 [ INFO] org.hibernate.annotations.common.Version HCANN000001: Hibernate Commons Annotations {5.0.1.Final} at org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
2016-10-24 14:31:56,046 [ INFO] org.hibernate.orm.connections HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/t_systems_progect] at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)
2016-10-24 14:31:56,047 [ INFO] org.hibernate.orm.connections HHH10001001: Connection properties: {user=root, password=****} at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:136)
2016-10-24 14:31:56,048 [ INFO] org.hibernate.orm.connections HHH10001003: Autocommit mode: false at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)
2016-10-24 14:31:56,054 [ INFO] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl HHH000115: Hibernate connection pool size: 20 (min=1) at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)
2016-10-24 14:31:58,213 [ INFO] org.hibernate.dialect.Dialect HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect at org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
2016-10-24 14:32:00,182 [ INFO] org.hibernate.hql.internal.QueryTranslatorFactoryInitiator HHH000397: Using ASTQueryTranslatorFactory at org.hibernate.hql.internal.QueryTranslatorFactoryInitiator.initiateService(QueryTranslatorFactoryInitiator.java:47)
2016-10-24 14:32:00,488 [ INFO] DAO.implementation.ObjectDaoImpl Get all objects from table where one of the params do not equals of columnAbstract class method at DAO.implementation.ObjectDaoImpl.getAllObgectsFromTableWhereOneOfTheColumnDontEqalsParam(ObjectDaoImpl.java:321)
2016-10-24 14:32:00,489 [ INFO] service.OrderSelectService orderListByClientName is null at service.OrderSelectService.getListOfOrderByClient(OrderSelectService.java:59)
2016-10-24 14:32:35,271 [ INFO] factory.Factory Create new Session Factory at factory.Factory.getSessionFactory(Factory.java:58)
2016-10-24 14:32:35,284 [ INFO] DAO.implementation.ObjectDaoImpl Get the class type at DAO.implementation.ObjectDaoImpl.<init>(ObjectDaoImpl.java:34)
2016-10-24 14:32:35,285 [ INFO] DAO.implementation.OrderDaoImpl Create OrderDao at DAO.implementation.OrderDaoImpl.<init>(OrderDaoImpl.java:18)
2016-10-24 14:32:35,285 [ INFO] factory.Factory realize OrderDao methods at factory.Factory.getOrderDAOImpl(Factory.java:80)
2016-10-24 14:32:35,782 [ INFO] org.hibernate.jpa.internal.util.LogHelper HHH000204: Processing PersistenceUnitInfo [
	name: SchoolPU
	...] at org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:31)
2016-10-24 14:32:36,143 [ INFO] org.hibernate.Version HHH000412: Hibernate Core {5.1.0.Final} at org.hibernate.Version.logVersion(Version.java:37)
2016-10-24 14:32:36,146 [ INFO] org.hibernate.cfg.Environment HHH000206: hibernate.properties not found at org.hibernate.cfg.Environment.<clinit>(Environment.java:213)
2016-10-24 14:32:36,173 [ INFO] org.hibernate.cfg.Environment HHH000021: Bytecode provider name : javassist at org.hibernate.cfg.Environment.buildBytecodeProvider(Environment.java:317)
2016-10-24 14:32:36,398 [ INFO] org.hibernate.annotations.common.Version HCANN000001: Hibernate Commons Annotations {5.0.1.Final} at org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:66)
2016-10-24 14:32:37,170 [ INFO] org.hibernate.orm.connections HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/t_systems_progect] at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:127)
2016-10-24 14:32:37,171 [ INFO] org.hibernate.orm.connections HHH10001001: Connection properties: {user=root, password=****} at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:136)
2016-10-24 14:32:37,172 [ INFO] org.hibernate.orm.connections HHH10001003: Autocommit mode: false at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:141)
2016-10-24 14:32:37,180 [ INFO] org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl HHH000115: Hibernate connection pool size: 20 (min=1) at org.hibernate.engine.jdbc.connections.internal.PooledConnections.<init>(PooledConnections.java:39)
2016-10-24 14:32:38,813 [ INFO] org.hibernate.dialect.Dialect HHH000400: Using dialect: org.hibernate.dialect.MySQLDialect at org.hibernate.dialect.Dialect.<init>(Dialect.java:156)
2016-10-24 14:32:40,917 [ INFO] org.hibernate.hql.internal.QueryTranslatorFactoryInitiator HHH000397: Using ASTQueryTranslatorFactory at org.hibernate.hql.internal.QueryTranslatorFactoryInitiator.initiateService(QueryTranslatorFactoryInitiator.java:47)
2016-10-24 14:32:41,346 [ INFO] DAO.implementation.ObjectDaoImpl Get all objects from table where one of the params do not equals of columnAbstract class method at DAO.implementation.ObjectDaoImpl.getAllObgectsFromTableWhereOneOfTheColumnDontEqalsParam(ObjectDaoImpl.java:321)
2016-10-24 14:32:41,350 [ INFO] service.OrderSelectService orderListByClientName is null at service.OrderSelectService.getListOfOrderByClient(OrderSelectService.java:59)
2016-10-24 14:32:41,350 [ INFO] factory.Factory Create new Session Factory at factory.Factory.getSessionFactory(Factory.java:58)
2016-10-24 14:32:41,350 [ INFO] DAO.implementation.ObjectDaoImpl Get the class type at DAO.implementation.ObjectDaoImpl.<init>(ObjectDaoImpl.java:34)
2016-10-24 14:32:41,351 [ INFO] DAO.implementation.OrderDaoImpl Create OrderDao at DAO.implementation.OrderDaoImpl.<init>(OrderDaoImpl.java:18)
2016-10-24 14:32:41,351 [ INFO] factory.Factory realize OrderDao methods at factory.Factory.getOrderDAOImpl(Factory.java:80)
2016-10-24 14:32:41,590 [ INFO] DAO.implementation.ObjectDaoImpl Get all objects from table where one of the params do not equals of columnAbstract class method at DAO.implementation.ObjectDaoImpl.getAllObgectsFromTableWhereOneOfTheColumnDontEqalsParam(ObjectDaoImpl.java:321)
2016-10-24 14:32:41,590 [ INFO] service.OrderSelectService returned new Orders list ordered by Client at service.OrderSelectService.getListOfOrderByClient(OrderSelectService.java:65)
2016-10-24 14:40:09,229 [ INFO] service.GetProfitForDate first date befor second date at service.GetProfitForDate.getToNewFormat(GetProfitForDate.java:55)
2016-10-24 14:40:09,239 [ INFO] service.GetProfitForDate second date befor first date at service.GetProfitForDate.getToNewFormat(GetProfitForDate.java:59)
2016-10-24 14:42:20,670 [ INFO] service.GetProfitForDate first date befor second date at service.GetProfitForDate.getToNewFormat(GetProfitForDate.java:55)
2016-10-24 14:42:20,678 [ INFO] service.GetProfitForDate second date befor first date at service.GetProfitForDate.getToNewFormat(GetProfitForDate.java:59)
2016-10-24 14:44:57,869 [ INFO] service.GetProfitForDate first date befor second date at service.GetProfitForDate.getToNewFormat(GetProfitForDate.java:55)
2016-10-24 14:44:57,875 [ INFO] service.GetProfitForDate second date befor first date at service.GetProfitForDate.getToNewFormat(GetProfitForDate.java:59)
2016-10-24 16:20:29,201 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 16:20:29,207 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 16:20:29,208 [ INFO] service.ProductRegistrationService Quantity may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:47)
2016-10-24 16:20:29,209 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 16:20:29,209 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 16:20:29,210 [ INFO] service.ProductRegistrationService Price may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:61)
2016-10-24 16:20:29,213 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 16:20:29,214 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:66)
2016-10-24 16:20:29,214 [ INFO] service.ProductRegistrationService Please don't leave empty fields at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:75)
2016-10-26 15:58:42,627 [ INFO] Messeger.MyAuthenticator Authentication created with login and password at Messeger.MyAuthenticator.getPasswordAuthentication(MyAuthenticator.java:22)
2016-10-26 18:41:27,653 [ INFO] Messeger.MyAuthenticator Authentication created with login and password at Messeger.MyAuthenticator.getPasswordAuthentication(MyAuthenticator.java:22)
2016-10-26 18:41:30,480 [ INFO] Messeger.MailSendler Message have been sent at Messeger.MailSendler.sendEmalToCLient(MailSender.java:61)
2016-10-26 18:43:41,707 [ INFO] Messeger.MyAuthenticator Authentication created with login and password at Messeger.MyAuthenticator.getPasswordAuthentication(MyAuthenticator.java:22)
2016-10-26 18:43:45,372 [ INFO] Messeger.MailSendler Message have been sent at Messeger.MailSendler.sendEmalToCLient(MailSender.java:61)
2016-10-26 18:44:46,656 [ INFO] Messeger.MyAuthenticator Authentication created with login and password at Messeger.MyAuthenticator.getPasswordAuthentication(MyAuthenticator.java:22)
2016-10-26 18:44:49,032 [ INFO] Messeger.MailSendler Message have been sent at Messeger.MailSendler.sendEmalToCLient(MailSender.java:61)
2016-10-26 18:45:48,893 [ INFO] Messeger.MyAuthenticator Authentication created with login and password at Messeger.MyAuthenticator.getPasswordAuthentication(MyAuthenticator.java:22)
2016-10-26 18:45:51,736 [ INFO] Messeger.MailSendler Message have been sent at Messeger.MailSendler.sendEmalToCLient(MailSender.java:63)
2016-10-26 20:46:32,572 [ INFO] Messeger.MyAuthenticator Authentication created with login and password at Messeger.MyAuthenticator.getPasswordAuthentication(MyAuthenticator.java:22)
2016-10-26 20:47:48,821 [ INFO] Messeger.MyAuthenticator Authentication created with login and password at Messeger.MyAuthenticator.getPasswordAuthentication(MyAuthenticator.java:22)
2016-10-26 20:47:52,046 [ INFO] Messeger.MailSendler Message have been sent at Messeger.MailSendler.sendEmalToCLient(MailSender.java:63)
2016-10-26 20:48:15,209 [ INFO] Messeger.MyAuthenticator Authentication created with login and password at Messeger.MyAuthenticator.getPasswordAuthentication(MyAuthenticator.java:22)
2016-10-26 20:48:18,300 [ INFO] Messeger.MailSendler Message have been sent at Messeger.MailSendler.sendEmalToCLient(MailSender.java:63)
2016-10-26 20:48:28,309 [ INFO] Messeger.MyAuthenticator Authentication created with login and password at Messeger.MyAuthenticator.getPasswordAuthentication(MyAuthenticator.java:22)
2016-10-26 20:55:57,295 [ INFO] Messeger.MyAuthenticator Authentication created with login and password at Messeger.MyAuthenticator.getPasswordAuthentication(MyAuthenticator.java:22)
2016-10-26 20:55:59,318 [ INFO] Messeger.MailSendler Message have been sent at Messeger.MailSendler.sendEmalToCLient(MailSender.java:59)
2016-10-26 20:56:07,714 [ INFO] Messeger.MyAuthenticator Authentication created with login and password at Messeger.MyAuthenticator.getPasswordAuthentication(MyAuthenticator.java:22)
2016-10-26 21:06:46,519 [ INFO] Messeger.MyAuthenticator Authentication created with login and password at Messeger.MyAuthenticator.getPasswordAuthentication(MyAuthenticator.java:22)
2016-10-26 21:06:48,876 [ INFO] Messeger.MailSendler Message have been sent at Messeger.MailSendler.sendEmalToCLient(MailSender.java:59)
2016-10-26 21:59:29,456 [ INFO] Messeger.MyAuthenticator Authentication created with login and password at Messeger.MyAuthenticator.getPasswordAuthentication(MyAuthenticator.java:22)
2016-10-26 21:59:31,968 [ INFO] Messeger.MailSendler Message have been sent at Messeger.MailSendler.sendEmalToCLient(MailSender.java:63)
2016-10-27 11:47:06,315 [ INFO] Messeger.MyAuthenticator Authentication created with login and password at Messeger.MyAuthenticator.getPasswordAuthentication(MyAuthenticator.java:22)
2016-10-27 11:47:08,941 [ INFO] Messeger.MailSendler Message have been sent at Messeger.MailSendler.sendEmalToCLient(MailSender.java:63)
2016-10-29 19:43:53,433 [ INFO] Messeger.MyAuthenticator Authentication created with login and password at Messeger.MyAuthenticator.getPasswordAuthentication(MyAuthenticator.java:22)
2016-10-29 19:43:56,666 [ INFO] Messeger.MailSendler Message have been sent at Messeger.MailSendler.sendEmalToCLient(MailSender.java:67)
2016-10-29 19:45:46,826 [ INFO] Messeger.MyAuthenticator Authentication created with login and password at Messeger.MyAuthenticator.getPasswordAuthentication(MyAuthenticator.java:22)
2016-10-29 19:45:50,436 [ INFO] Messeger.MailSendler Message have been sent at Messeger.MailSendler.sendEmalToCLient(MailSender.java:67)
2016-10-29 19:45:50,437 [ INFO] service.MailService message to new Client have been sent at service.MailService.sendMessageToNewClient(MailService.java:40)
2016-10-29 20:30:08,045 [ INFO] Messeger.MyAuthenticator Authentication created with login and password at Messeger.MyAuthenticator.getPasswordAuthentication(MyAuthenticator.java:22)
2016-10-29 20:30:10,514 [ INFO] Messeger.MailSendler Message have been sent at Messeger.MailSendler.sendEmalToCLient(MailSendler.java:62)
2016-10-29 20:30:10,515 [ INFO] service.MailService message to new Client have been sent at service.MailService.sendMessageToNewClient(MailService.java:40)
2016-10-29 20:31:18,435 [ INFO] Messeger.MyAuthenticator Authentication created with login and password at Messeger.MyAuthenticator.getPasswordAuthentication(MyAuthenticator.java:22)
2016-10-29 20:31:20,517 [ INFO] Messeger.MailSendler Message have been sent at Messeger.MailSendler.sendEmalToCLient(MailSendler.java:62)
2016-10-29 20:31:47,561 [ INFO] Messeger.MyAuthenticator Authentication created with login and password at Messeger.MyAuthenticator.getPasswordAuthentication(MyAuthenticator.java:22)
2016-10-29 20:31:50,150 [ INFO] Messeger.MailSendler Message have been sent at Messeger.MailSendler.sendEmalToCLient(MailSendler.java:62)
2016-11-02 16:09:48,303 [ INFO] service.GetProfitForDate first date befor second date at service.GetProfitForDate.getToNewFormat(GetProfitForDate.java:55)
2016-11-02 16:09:48,311 [ INFO] service.GetProfitForDate second date befor first date at service.GetProfitForDate.getToNewFormat(GetProfitForDate.java:59)
2016-11-02 16:09:48,321 [ INFO] factory.Factory Create new Session Factory at factory.Factory.getSessionFactory(Factory.java:58)
2016-11-02 16:09:48,337 [ INFO] DAO.implementation.ObjectDaoImpl Get the class type at DAO.implementation.ObjectDaoImpl.<init>(ObjectDaoImpl.java:38)
2016-11-02 16:09:48,339 [ INFO] DAO.implementation.OrderDaoImpl Create OrderDao at DAO.implementation.OrderDaoImpl.<init>(OrderDaoImpl.java:19)
2016-11-02 16:09:48,340 [ INFO] factory.Factory realize OrderDao methods at factory.Factory.getOrderDAOImpl(Factory.java:80)
2016-11-02 16:09:48,364 [ INFO] factory.Factory Create new Session Factory at factory.Factory.getSessionFactory(Factory.java:58)
2016-11-02 16:09:48,366 [ INFO] DAO.implementation.ObjectDaoImpl Get the class type at DAO.implementation.ObjectDaoImpl.<init>(ObjectDaoImpl.java:38)
2016-11-02 16:09:48,367 [ INFO] DAO.implementation.ProductDaoImpl Create Product Dao at DAO.implementation.ProductDaoImpl.<init>(ProductDaoImpl.java:30)
2016-11-02 16:09:48,367 [ INFO] factory.Factory realize Product Dao methods at factory.Factory.getProductDaoImpl(Factory.java:159)
2016-11-02 16:09:48,371 [ INFO] factory.Factory Create new Session Factory at factory.Factory.getSessionFactory(Factory.java:58)
2016-11-02 16:09:48,375 [ INFO] DAO.implementation.ObjectDaoImpl Get the class type at DAO.implementation.ObjectDaoImpl.<init>(ObjectDaoImpl.java:38)
2016-11-02 16:09:48,375 [ INFO] DAO.implementation.ProductDaoImpl Create Product Dao at DAO.implementation.ProductDaoImpl.<init>(ProductDaoImpl.java:30)
2016-11-02 16:09:48,376 [ INFO] factory.Factory realize Product Dao methods at factory.Factory.getProductDaoImpl(Factory.java:159)
2016-11-02 16:09:48,386 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-02 16:09:48,387 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-02 16:09:48,391 [ INFO] service.ProductRegistrationService Power may be only numbers at service.ProductRegistrationService.createParams(ProductRegistrationService.java:98)
2016-11-02 16:09:48,392 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-02 16:09:48,392 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-02 16:09:48,393 [ INFO] service.ProductRegistrationService Weight may be only numbers at service.ProductRegistrationService.createParams(ProductRegistrationService.java:112)
2016-11-02 16:09:48,393 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-02 16:09:48,394 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-02 16:09:48,394 [ INFO] service.ProductRegistrationService Please don't leave empty fields at service.ProductRegistrationService.createParams(ProductRegistrationService.java:126)
2016-11-02 16:09:48,395 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-02 16:09:48,396 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-02 16:09:48,396 [ INFO] service.ProductRegistrationService Quantity may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:47)
2016-11-02 16:09:48,397 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-02 16:09:48,397 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-02 16:09:48,398 [ INFO] service.ProductRegistrationService Price may be only numbers at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:61)
2016-11-02 16:09:48,398 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-02 16:09:48,399 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-02 16:09:48,400 [ INFO] service.ProductRegistrationService Please don't leave empty fields at service.ProductRegistrationService.createProduct(ProductRegistrationService.java:75)
2016-11-20 20:21:58,993 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 20:21:59,014 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:22:34,016 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 20:22:34,023 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:23:16,605 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 20:23:16,611 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:27:29,212 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:27:29,246 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 20:27:29,249 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:27:52,759 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:27:52,771 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 20:27:52,772 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:29:21,221 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:29:21,230 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:29:21,247 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 20:29:21,248 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:30:09,237 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:30:09,249 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 20:30:09,250 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:30:09,252 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 20:30:09,252 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:45:52,416 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:45:52,426 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 20:45:52,427 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:45:52,430 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 20:45:52,431 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:48:43,244 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:48:43,255 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 20:48:43,255 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:48:43,256 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 20:48:43,257 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:48:43,258 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-20 20:48:43,260 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-20 20:50:35,357 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:50:35,365 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 20:50:35,366 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:50:35,366 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:50:35,367 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 20:50:35,367 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:50:35,368 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-20 20:50:35,372 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:50:35,373 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 20:50:35,374 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:50:35,375 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 20:50:35,375 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 20:50:35,376 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-20 20:50:35,377 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-20 21:37:33,814 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-20 21:38:00,415 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-20 21:38:52,543 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-20 21:38:56,580 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-20 21:39:23,859 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-20 21:40:22,099 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 21:40:22,107 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 21:40:22,108 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-20 21:40:39,469 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 21:40:39,477 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 21:40:39,477 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 21:40:39,478 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 21:40:39,479 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 21:40:39,479 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 21:40:39,480 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-20 21:40:39,485 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 21:40:39,490 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 21:40:39,492 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 21:40:39,494 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 21:40:39,495 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 21:40:39,497 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-20 21:40:39,499 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-20 21:40:39,501 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-20 21:40:39,502 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 21:40:39,506 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 21:40:39,507 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-20 21:54:01,741 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-20 21:56:02,830 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-20 21:56:56,467 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 21:56:56,482 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 21:56:56,483 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-20 21:57:49,891 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 21:57:49,905 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 21:57:49,906 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-20 21:58:41,908 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 21:58:41,920 [ INFO] httphendler.HttpResult Set data for Gson Object from servlet to client Page at httphendler.HttpResult.setData(HttpResult.java:93)
2016-11-20 21:59:21,954 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 21:59:21,966 [ INFO] httphendler.HttpResult Set data for Gson Object from servlet to client Page at httphendler.HttpResult.setData(HttpResult.java:93)
2016-11-20 21:59:21,967 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:00:01,766 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:00:01,780 [ INFO] httphendler.HttpResult Set data for Gson Object from servlet to client Page at httphendler.HttpResult.setData(HttpResult.java:93)
2016-11-20 22:00:01,781 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:00:01,798 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:00:01,799 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:00:01,807 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:00:01,807 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:00:01,808 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-20 22:00:01,810 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:01:38,499 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:01:38,515 [ INFO] httphendler.HttpResult Set data for Gson Object from servlet to client Page at httphendler.HttpResult.setData(HttpResult.java:93)
2016-11-20 22:02:39,338 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:02:39,361 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:02:39,363 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:02:39,365 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:02:39,366 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:02:39,366 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-20 22:02:39,366 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:02:47,746 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:02:47,754 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:02:47,755 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:105)
2016-11-20 22:02:47,755 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:02:47,761 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:02:47,762 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:02:47,763 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:02:47,764 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:02:47,764 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-20 22:02:47,765 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:03:51,810 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:03:51,820 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:03:51,821 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-20 22:03:51,822 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:03:51,822 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:99)
2016-11-20 22:03:51,823 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:04:19,889 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:04:19,898 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:04:19,899 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-20 22:04:19,899 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:04:19,900 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:99)
2016-11-20 22:04:19,900 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:04:30,038 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 22:04:30,042 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 22:04:30,045 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 22:04:30,046 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 22:04:30,047 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 22:04:30,048 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 22:04:30,049 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-20 22:04:30,055 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 22:04:30,056 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 22:04:30,057 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 22:04:30,060 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 22:04:30,060 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 22:04:30,063 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-20 22:04:30,065 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-20 22:04:30,066 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-20 22:04:30,068 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 22:04:30,071 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 22:04:30,072 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-20 22:04:31,173 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:04:31,174 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:04:31,175 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:105)
2016-11-20 22:04:31,175 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:04:31,178 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:04:31,179 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:04:31,179 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-20 22:04:31,183 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:04:31,183 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:99)
2016-11-20 22:04:31,184 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:04:31,257 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:04:31,262 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:04:31,277 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:04:31,278 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:04:31,279 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-20 22:04:31,279 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:06:48,852 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:06:48,875 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:06:48,875 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-20 22:06:48,876 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:06:59,727 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:06:59,735 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:06:59,737 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-20 22:06:59,738 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:37:48,331 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:37:48,340 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:37:48,340 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:156)
2016-11-20 22:37:48,341 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:38:36,386 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:38:36,403 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:38:36,403 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-20 22:38:36,404 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:38:36,404 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:150)
2016-11-20 22:38:36,405 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:01,840 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:01,847 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:01,848 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:156)
2016-11-20 22:42:01,848 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:01,852 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:01,853 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:01,856 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-20 22:42:01,858 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:01,861 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:150)
2016-11-20 22:42:01,862 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:01,864 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:01,865 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:01,865 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:105)
2016-11-20 22:42:01,865 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:01,867 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:01,868 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:01,874 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-20 22:42:01,875 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:01,875 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:99)
2016-11-20 22:42:01,876 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:01,880 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:01,882 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:01,884 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:01,886 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:01,890 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:01,892 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:01,892 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-20 22:42:01,893 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:01,894 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:01,894 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:01,895 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-20 22:42:01,895 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:24,564 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:24,590 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:24,592 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:156)
2016-11-20 22:42:24,592 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:24,597 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:24,609 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:24,610 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-20 22:42:24,610 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:24,611 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:150)
2016-11-20 22:42:24,611 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:24,616 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:24,618 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:24,619 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:105)
2016-11-20 22:42:24,620 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:24,621 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:24,624 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:24,631 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-20 22:42:24,631 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:24,632 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:99)
2016-11-20 22:42:24,632 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:24,640 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:24,642 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:24,644 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:24,648 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:24,650 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:24,655 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:24,656 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-20 22:42:24,657 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:24,659 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:24,660 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:24,660 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-20 22:42:24,660 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:38,323 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 22:42:38,331 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 22:42:38,332 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 22:42:38,332 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 22:42:38,334 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 22:42:38,334 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 22:42:38,335 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-20 22:42:38,355 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 22:42:38,357 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 22:42:38,358 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 22:42:38,359 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 22:42:38,360 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 22:42:38,362 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-20 22:42:38,364 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-20 22:42:38,365 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-20 22:42:38,367 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 22:42:38,371 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 22:42:38,374 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-20 22:42:39,725 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:39,726 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:39,727 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:156)
2016-11-20 22:42:39,728 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:39,730 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:39,730 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:39,731 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-20 22:42:39,731 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:39,732 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:150)
2016-11-20 22:42:39,733 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:39,734 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:39,735 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:39,735 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:105)
2016-11-20 22:42:39,736 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:39,737 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:39,738 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:39,738 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-20 22:42:39,739 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:39,739 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:99)
2016-11-20 22:42:39,740 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:39,744 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:39,746 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:39,749 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:39,753 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:39,757 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:39,759 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:39,760 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-20 22:42:39,760 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:39,763 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:39,764 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 22:42:39,764 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-20 22:42:39,766 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:08:03,472 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 23:08:03,493 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 23:08:03,495 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 23:08:03,499 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 23:08:03,501 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 23:08:03,502 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 23:08:03,505 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-20 23:08:03,509 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 23:08:03,510 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 23:08:03,511 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 23:08:03,512 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 23:08:03,512 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 23:08:03,514 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-20 23:08:03,515 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-20 23:08:03,518 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-20 23:08:03,523 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 23:08:03,532 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 23:08:03,532 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-20 23:08:05,144 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:08:05,144 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:08:05,145 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:156)
2016-11-20 23:08:05,146 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:08:05,149 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:08:05,150 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:08:05,150 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-20 23:08:05,151 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:08:05,151 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:150)
2016-11-20 23:08:05,151 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:08:05,154 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:08:05,156 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:08:05,156 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:105)
2016-11-20 23:08:05,157 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:08:05,158 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:08:05,159 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:08:05,160 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-20 23:08:05,160 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:08:05,161 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:99)
2016-11-20 23:08:05,161 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:08:05,163 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:08:05,165 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:08:05,167 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:08:05,169 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:08:05,171 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:08:05,173 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:08:05,173 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-20 23:08:05,174 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:08:05,175 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:08:05,176 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:08:05,176 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-20 23:08:05,177 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:09:33,619 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 23:09:33,626 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 23:09:33,627 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 23:09:33,627 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 23:09:33,628 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 23:09:33,636 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 23:09:33,637 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-20 23:09:33,676 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 23:09:33,678 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 23:09:33,679 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 23:09:33,680 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 23:09:33,681 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 23:09:33,683 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-20 23:09:33,684 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-20 23:09:33,685 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-20 23:09:33,699 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 23:09:33,712 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 23:09:33,713 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-20 23:09:35,203 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:09:35,205 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:09:35,206 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:156)
2016-11-20 23:09:35,206 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:09:35,209 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:09:35,210 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:09:35,210 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-20 23:09:35,211 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:09:35,211 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:150)
2016-11-20 23:09:35,212 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:09:35,213 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:09:35,214 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:09:35,215 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:105)
2016-11-20 23:09:35,216 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:09:35,217 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:09:35,218 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:09:35,219 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-20 23:09:35,219 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:09:35,219 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:99)
2016-11-20 23:09:35,220 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:09:35,225 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:09:35,232 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:09:35,235 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:09:35,237 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:09:35,239 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:09:35,240 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:09:35,241 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-20 23:09:35,241 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:09:35,255 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:09:35,256 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:09:35,256 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-20 23:09:35,257 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:27:43,408 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 23:27:43,424 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 23:27:43,425 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 23:27:43,426 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 23:27:43,426 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 23:27:43,427 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 23:27:43,428 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-20 23:27:43,432 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 23:27:43,434 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 23:27:43,434 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 23:27:43,436 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 23:27:43,437 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 23:27:43,438 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-20 23:27:43,439 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-20 23:27:43,440 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-20 23:27:43,441 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-20 23:27:43,447 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-20 23:27:43,449 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-20 23:27:45,570 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:27:45,574 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:27:45,575 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:156)
2016-11-20 23:27:45,575 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:27:45,578 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:27:45,579 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:27:45,580 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-20 23:27:45,581 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:27:45,582 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:150)
2016-11-20 23:27:45,583 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:27:45,585 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:27:45,586 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:27:45,587 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:105)
2016-11-20 23:27:45,587 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:27:45,589 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:27:45,590 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:27:45,591 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-20 23:27:45,592 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:27:45,592 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:99)
2016-11-20 23:27:45,593 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:27:45,598 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:27:45,604 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:27:45,607 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:27:45,647 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:27:45,656 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:27:45,656 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:27:45,659 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-20 23:27:45,661 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:27:45,673 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:27:45,675 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-20 23:27:45,679 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-20 23:27:45,680 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 12:28:50,664 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 12:28:50,678 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 12:28:50,679 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 12:28:50,680 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 12:28:50,681 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 12:28:50,681 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 12:28:50,682 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 12:28:50,692 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 12:28:50,695 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 12:28:50,695 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 12:28:50,696 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 12:28:50,697 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 12:28:50,698 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 12:28:50,699 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 12:28:50,700 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-21 12:28:50,701 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 12:28:50,705 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 12:28:50,705 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-21 12:28:53,180 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 12:28:53,181 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 12:28:53,182 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:156)
2016-11-21 12:28:53,183 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 12:28:53,185 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 12:28:53,185 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 12:28:53,186 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-21 12:28:53,186 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 12:28:53,188 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:150)
2016-11-21 12:28:53,188 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 12:28:53,190 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 12:28:53,191 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 12:28:53,192 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:105)
2016-11-21 12:28:53,192 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 12:28:53,195 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 12:28:53,196 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 12:28:53,196 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-21 12:28:53,197 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 12:28:53,197 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:99)
2016-11-21 12:28:53,198 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 12:28:53,201 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 12:28:53,205 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 12:28:53,207 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 12:28:53,209 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 12:28:53,211 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 12:28:53,212 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 12:28:53,213 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-21 12:28:53,215 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 12:28:53,217 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 12:28:53,218 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 12:28:53,219 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-21 12:28:53,219 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:00:21,794 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:00:21,804 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 13:00:21,806 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:00:21,807 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:00:21,808 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 13:00:21,809 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:00:21,810 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 13:00:21,817 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:00:21,825 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 13:00:21,825 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:00:21,827 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 13:00:21,828 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:00:21,829 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 13:00:21,830 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 13:00:21,832 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-21 13:00:21,834 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 13:00:21,838 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:00:21,839 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-21 13:00:23,595 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:00:23,597 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:00:23,598 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:156)
2016-11-21 13:00:23,599 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:00:23,602 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:00:23,603 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:00:23,603 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-21 13:00:23,604 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:00:23,605 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:150)
2016-11-21 13:00:23,605 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:00:23,607 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:00:23,608 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:00:23,609 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:105)
2016-11-21 13:00:23,609 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:00:23,612 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:00:23,612 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:00:23,613 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-21 13:00:23,614 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:00:23,615 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:99)
2016-11-21 13:00:23,616 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:00:23,623 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:00:23,628 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:00:23,634 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:00:23,637 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:00:23,639 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:00:23,640 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:00:23,641 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-21 13:00:23,642 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:00:23,645 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:00:23,645 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:00:23,647 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-21 13:00:23,648 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:33:56,070 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:33:56,081 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 13:33:56,082 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:33:56,082 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:33:56,083 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 13:33:56,084 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:33:56,084 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 13:33:56,091 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:33:56,097 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 13:33:56,098 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:33:56,099 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 13:33:56,099 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:33:56,101 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 13:33:56,102 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 13:33:56,103 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-21 13:33:56,104 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 13:33:56,107 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:33:56,108 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-21 13:33:58,410 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:33:58,413 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:33:58,413 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:156)
2016-11-21 13:33:58,414 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:33:58,418 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:33:58,421 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:33:58,424 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-21 13:33:58,426 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:33:58,432 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:150)
2016-11-21 13:33:58,435 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:33:58,442 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:33:58,443 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:33:58,444 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:105)
2016-11-21 13:33:58,444 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:33:58,448 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:33:58,451 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:33:58,452 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-21 13:33:58,453 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:33:58,453 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:99)
2016-11-21 13:33:58,454 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:33:58,477 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:33:58,489 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:33:58,494 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:33:58,503 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:33:58,511 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:33:58,516 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:33:58,516 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-21 13:33:58,518 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:33:58,521 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:33:58,522 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:33:58,523 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-21 13:33:58,524 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:43:29,358 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:43:29,369 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 13:43:29,370 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:43:29,370 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:43:29,372 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 13:43:29,372 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:43:29,373 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 13:43:29,379 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:43:29,382 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 13:43:29,383 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:43:29,384 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 13:43:29,385 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:43:29,388 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 13:43:29,389 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 13:43:29,390 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-21 13:43:29,392 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 13:43:29,397 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:43:29,398 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-21 13:43:31,871 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:43:31,872 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:43:31,872 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:156)
2016-11-21 13:43:31,874 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:43:31,876 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:43:31,876 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:43:31,877 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-21 13:43:31,877 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:43:31,878 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:150)
2016-11-21 13:43:31,878 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:43:31,880 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:43:31,881 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:43:31,881 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:105)
2016-11-21 13:43:31,882 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:43:31,883 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:43:31,884 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:43:31,884 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-21 13:43:31,885 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:43:31,885 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:99)
2016-11-21 13:43:31,886 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:43:31,888 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:43:31,891 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:43:31,894 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:43:31,896 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:43:31,898 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:43:31,899 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:43:31,899 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-21 13:43:31,900 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:43:31,902 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:43:31,902 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:43:31,903 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-21 13:43:31,903 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:44:11,470 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:44:11,495 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 13:44:11,496 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:44:11,497 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:44:11,498 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 13:44:11,499 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:44:11,500 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 13:44:11,505 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:44:11,506 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 13:44:11,507 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:44:11,509 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 13:44:11,510 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:44:11,512 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 13:44:11,513 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 13:44:11,526 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-21 13:44:11,527 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 13:44:11,536 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:44:11,536 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-21 13:44:13,649 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:44:13,653 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:44:13,654 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:156)
2016-11-21 13:44:13,654 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:44:13,656 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:44:13,658 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:44:13,659 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-21 13:44:13,659 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:44:13,660 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:150)
2016-11-21 13:44:13,661 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:44:13,667 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:44:13,669 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:44:13,671 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:105)
2016-11-21 13:44:13,672 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:44:13,673 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:44:13,675 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:44:13,676 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-21 13:44:13,677 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:44:13,678 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:99)
2016-11-21 13:44:13,679 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:44:13,681 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:44:13,689 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:44:13,692 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:44:13,695 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:44:13,697 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:44:13,698 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:44:13,699 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-21 13:44:13,700 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:44:13,709 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:44:13,710 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:44:13,710 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-21 13:44:13,711 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:49:21,558 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:49:21,567 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 13:49:21,567 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:49:21,568 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:49:21,569 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 13:49:21,569 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:49:21,570 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 13:49:21,576 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:49:21,586 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 13:49:21,587 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:49:21,588 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 13:49:21,588 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:49:21,591 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 13:49:21,595 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 13:49:21,597 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-21 13:49:21,598 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 13:49:21,606 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 13:49:21,607 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-21 13:49:23,396 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:49:23,397 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:49:23,397 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:156)
2016-11-21 13:49:23,398 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:49:23,399 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:49:23,400 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:49:23,400 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-21 13:49:23,400 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:49:23,401 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:150)
2016-11-21 13:49:23,401 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:49:23,403 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:49:23,403 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:49:23,403 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:105)
2016-11-21 13:49:23,404 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:49:23,405 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:49:23,405 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:49:23,405 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-21 13:49:23,406 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:49:23,406 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:99)
2016-11-21 13:49:23,406 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:49:23,410 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:49:23,415 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:49:23,417 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:49:23,418 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:49:23,420 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:49:23,420 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:49:23,421 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-21 13:49:23,421 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:49:23,423 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:49:23,423 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 13:49:23,423 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-21 13:49:23,424 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 16:01:31,163 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 16:01:31,169 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 16:01:31,169 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 16:01:31,170 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 16:01:31,170 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 16:01:31,170 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 16:01:31,171 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 16:01:31,173 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 16:01:31,174 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 16:01:31,174 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 16:01:31,175 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 16:01:31,175 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 16:01:31,176 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 16:01:31,177 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 16:01:31,178 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-21 16:01:31,179 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 16:01:31,183 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 16:01:31,184 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-21 16:01:34,488 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 16:01:34,506 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 16:01:34,506 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:156)
2016-11-21 16:01:34,509 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 16:01:34,511 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 16:01:34,512 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 16:01:34,513 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-21 16:01:34,515 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 16:01:34,516 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:150)
2016-11-21 16:01:34,516 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 16:01:34,518 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 16:01:34,519 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 16:01:34,519 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:105)
2016-11-21 16:01:34,520 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 16:01:34,521 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 16:01:34,521 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 16:01:34,522 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-21 16:01:34,522 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 16:01:34,522 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:99)
2016-11-21 16:01:34,523 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 16:01:34,527 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 16:01:34,531 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 16:01:34,533 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 16:01:34,534 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 16:01:34,537 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 16:01:34,538 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 16:01:34,538 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-21 16:01:34,542 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 16:01:34,544 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 16:01:34,546 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 16:01:34,546 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-21 16:01:34,548 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:22:58,577 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 17:22:58,613 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 17:22:58,614 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 17:22:58,615 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 17:22:58,617 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 17:22:58,622 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 17:22:58,623 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 17:22:58,649 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 17:22:58,668 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 17:22:58,669 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 17:22:58,685 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 17:22:58,686 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 17:22:58,693 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 17:22:58,780 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 17:22:58,787 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-21 17:22:58,831 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 17:22:58,867 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 17:22:58,881 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-21 17:23:06,317 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:23:06,326 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:23:06,326 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:156)
2016-11-21 17:23:06,327 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:23:06,329 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:23:06,330 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:23:06,331 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-21 17:23:06,331 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:23:06,332 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:150)
2016-11-21 17:23:06,333 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:23:06,334 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:23:06,335 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:23:06,336 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:105)
2016-11-21 17:23:06,337 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:23:06,339 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:23:06,340 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:23:06,340 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-21 17:23:06,341 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:23:06,342 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:99)
2016-11-21 17:23:06,342 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:23:06,402 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:23:06,534 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:23:06,546 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:23:06,548 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:23:06,550 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:23:06,552 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:23:06,553 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-21 17:23:06,555 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:23:06,556 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:23:06,557 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:23:06,558 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-21 17:23:06,563 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:40:24,903 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 17:40:24,913 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 17:40:24,913 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 17:40:24,914 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 17:40:24,916 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 17:40:24,918 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 17:40:24,920 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 17:40:24,926 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 17:40:24,930 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 17:40:24,931 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 17:40:24,935 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 17:40:24,936 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 17:40:24,937 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 17:40:24,940 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 17:40:24,942 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-21 17:40:24,943 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 17:40:24,949 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 17:40:24,960 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-21 17:40:29,122 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:40:29,129 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:40:29,132 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:156)
2016-11-21 17:40:29,132 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:40:29,135 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:40:29,137 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:40:29,138 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-21 17:40:29,139 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:40:29,140 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:150)
2016-11-21 17:40:29,141 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:40:29,145 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:40:29,146 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:40:29,146 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:105)
2016-11-21 17:40:29,147 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:40:29,148 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:40:29,149 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:40:29,149 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-21 17:40:29,150 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:40:29,151 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:99)
2016-11-21 17:40:29,155 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:40:29,163 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:40:29,166 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:40:29,170 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:40:29,175 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:40:29,177 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:40:29,178 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:40:29,179 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-21 17:40:29,179 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:40:29,182 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:40:29,184 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 17:40:29,185 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-21 17:40:29,192 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:26:51,161 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 21:26:51,170 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 21:26:51,170 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 21:26:51,171 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 21:26:51,172 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 21:26:51,173 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 21:26:51,174 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 21:26:51,186 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 21:26:51,188 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 21:26:51,189 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 21:26:51,190 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 21:26:51,190 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 21:26:51,191 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 21:26:51,192 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 21:26:51,193 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-21 21:26:51,195 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 21:26:51,199 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 21:26:51,200 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-21 21:26:52,534 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:26:52,535 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:26:52,535 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:156)
2016-11-21 21:26:52,536 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:26:52,537 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:26:52,538 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:26:52,538 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-21 21:26:52,539 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:26:52,539 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:150)
2016-11-21 21:26:52,540 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:26:52,542 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:26:52,542 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:26:52,543 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:105)
2016-11-21 21:26:52,544 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:26:52,545 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:26:52,546 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:26:52,547 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-21 21:26:52,547 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:26:52,548 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:99)
2016-11-21 21:26:52,548 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:26:52,550 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:26:52,553 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:26:52,556 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:26:52,558 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:26:52,559 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:26:52,560 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:26:52,560 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-21 21:26:52,561 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:26:52,563 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:26:52,564 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:26:52,564 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-21 21:26:52,565 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:57:34,831 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 21:57:34,851 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 21:57:34,852 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 21:57:34,853 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 21:57:34,853 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 21:57:34,854 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 21:57:34,855 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 21:57:34,861 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 21:57:34,862 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 21:57:34,863 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 21:57:34,864 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 21:57:34,865 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 21:57:34,866 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 21:57:34,867 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-21 21:57:34,868 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-21 21:57:34,869 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-21 21:57:34,874 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-21 21:57:34,874 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-21 21:57:36,911 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:57:36,914 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:57:36,918 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:156)
2016-11-21 21:57:36,919 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:57:36,921 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:57:36,921 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:57:36,922 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-21 21:57:36,922 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:57:36,923 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:150)
2016-11-21 21:57:36,925 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:57:36,927 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:57:36,928 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:57:36,928 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:105)
2016-11-21 21:57:36,929 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:57:36,931 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:57:36,931 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:57:36,932 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-21 21:57:36,932 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:57:36,933 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:99)
2016-11-21 21:57:36,933 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:57:36,937 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:57:36,940 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:57:36,946 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:57:36,949 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:57:36,951 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:57:36,951 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:57:36,952 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-21 21:57:36,953 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:57:36,954 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:57:36,955 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-21 21:57:36,955 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-21 21:57:36,956 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 12:35:53,022 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 12:35:53,037 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 12:35:53,038 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 12:35:53,039 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 12:35:53,041 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 12:35:53,041 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 12:35:53,044 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-22 12:35:53,057 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 12:35:53,061 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 12:35:53,063 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 12:35:53,065 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 12:35:53,066 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 12:35:53,079 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-22 12:35:53,082 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-22 12:35:53,083 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-22 12:35:53,087 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 12:35:53,092 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 12:35:53,102 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-22 12:35:55,737 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 12:35:55,738 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 12:35:55,739 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:156)
2016-11-22 12:35:55,739 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 12:35:55,741 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 12:35:55,742 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 12:35:55,743 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-22 12:35:55,743 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 12:35:55,744 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:150)
2016-11-22 12:35:55,745 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 12:35:55,747 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 12:35:55,748 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 12:35:55,750 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:105)
2016-11-22 12:35:55,750 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 12:35:55,762 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 12:35:55,763 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 12:35:55,764 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-22 12:35:55,765 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 12:35:55,766 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:99)
2016-11-22 12:35:55,766 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 12:35:55,770 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 12:35:55,775 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 12:35:55,779 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 12:35:55,783 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 12:35:55,787 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 12:35:55,790 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 12:35:55,790 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-22 12:35:55,791 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 12:35:55,794 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 12:35:55,795 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 12:35:55,795 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-22 12:35:55,796 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 18:24:21,473 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 18:24:21,481 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 18:24:21,481 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 18:24:21,482 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 18:24:21,483 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 18:24:21,483 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 18:24:21,484 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-22 18:24:21,490 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 18:24:21,492 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 18:24:21,492 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 18:24:21,493 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 18:24:21,494 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 18:24:21,495 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-22 18:24:21,496 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-22 18:24:21,496 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-22 18:24:21,497 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 18:24:21,500 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 18:24:21,500 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-22 18:24:23,594 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 18:24:23,595 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 18:24:23,596 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:156)
2016-11-22 18:24:23,597 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 18:24:23,600 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 18:24:23,601 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 18:24:23,601 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-22 18:24:23,602 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 18:24:23,604 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:150)
2016-11-22 18:24:23,604 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 18:24:23,608 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 18:24:23,608 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 18:24:23,609 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:105)
2016-11-22 18:24:23,609 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 18:24:23,611 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 18:24:23,611 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 18:24:23,612 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-22 18:24:23,612 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 18:24:23,613 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:99)
2016-11-22 18:24:23,613 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 18:24:23,615 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 18:24:23,617 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 18:24:23,619 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 18:24:23,621 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 18:24:23,623 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 18:24:23,623 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 18:24:23,625 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:142)
2016-11-22 18:24:23,625 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 18:24:23,626 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 18:24:23,627 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 18:24:23,627 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:91)
2016-11-22 18:24:23,628 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:09:47,307 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 20:09:47,338 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 20:09:47,339 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 20:09:47,339 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 20:09:47,344 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 20:09:47,345 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 20:09:47,346 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-22 20:09:47,350 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 20:09:47,351 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 20:09:47,351 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 20:09:47,352 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 20:09:47,352 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 20:09:47,353 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-22 20:09:47,354 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-22 20:09:47,355 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-22 20:09:47,356 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 20:09:47,360 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 20:09:47,361 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-22 20:09:48,657 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:09:48,658 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:09:48,659 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:167)
2016-11-22 20:09:48,660 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:09:48,662 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:09:48,663 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:09:48,664 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:153)
2016-11-22 20:09:48,666 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:09:48,667 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:161)
2016-11-22 20:09:48,668 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:09:48,670 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:09:48,671 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:09:48,672 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:116)
2016-11-22 20:09:48,674 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:09:48,677 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:09:48,678 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:09:48,678 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:102)
2016-11-22 20:09:48,679 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:09:48,680 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:110)
2016-11-22 20:09:48,681 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:09:48,686 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:09:48,689 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:09:48,691 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:09:48,694 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:09:48,695 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:09:48,696 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:09:48,696 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:153)
2016-11-22 20:09:48,697 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:09:48,700 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:09:48,701 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:09:48,702 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:102)
2016-11-22 20:09:48,702 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:41:58,317 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 20:41:58,330 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 20:41:58,331 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 20:41:58,331 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 20:41:58,332 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 20:41:58,332 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 20:41:58,333 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-22 20:41:58,340 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 20:41:58,342 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 20:41:58,342 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 20:41:58,344 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 20:41:58,345 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 20:41:58,346 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-22 20:41:58,346 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-22 20:41:58,347 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-22 20:41:58,348 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 20:41:58,351 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 20:41:58,352 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-22 20:42:00,072 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:42:00,074 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:42:00,074 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:169)
2016-11-22 20:42:00,075 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:42:00,076 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:42:00,077 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:42:00,078 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:155)
2016-11-22 20:42:00,079 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:42:00,079 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:163)
2016-11-22 20:42:00,080 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:42:00,083 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:42:00,084 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:42:00,085 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:117)
2016-11-22 20:42:00,085 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:42:00,087 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:42:00,088 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:42:00,088 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:103)
2016-11-22 20:42:00,091 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:42:00,092 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:111)
2016-11-22 20:42:00,092 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:42:00,095 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:42:00,099 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:42:00,102 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:42:00,104 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:42:00,105 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:42:00,106 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:42:00,108 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:155)
2016-11-22 20:42:00,109 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:42:00,110 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:42:00,111 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:42:00,112 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:103)
2016-11-22 20:42:00,112 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:45:01,809 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 20:45:01,840 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 20:45:01,841 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 20:45:01,841 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 20:45:01,842 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 20:45:01,842 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 20:45:01,843 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-22 20:45:01,849 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 20:45:01,851 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 20:45:01,851 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 20:45:01,852 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 20:45:01,853 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 20:45:01,854 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-22 20:45:01,855 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-22 20:45:01,857 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-22 20:45:01,858 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 20:45:01,862 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 20:45:01,863 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-22 20:45:03,482 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:45:03,483 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:45:03,483 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:169)
2016-11-22 20:45:03,484 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:45:03,486 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:45:03,486 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:45:03,487 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:155)
2016-11-22 20:45:03,488 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:45:03,488 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:163)
2016-11-22 20:45:03,489 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:45:03,490 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:45:03,491 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:45:03,492 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:117)
2016-11-22 20:45:03,492 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:45:03,494 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:45:03,494 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:45:03,495 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:103)
2016-11-22 20:45:03,495 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:45:03,496 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:111)
2016-11-22 20:45:03,496 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:45:03,498 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:45:03,501 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:45:03,503 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:45:03,506 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:45:03,508 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:45:03,509 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:45:03,509 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:155)
2016-11-22 20:45:03,509 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:45:03,511 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:45:03,511 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 20:45:03,512 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:103)
2016-11-22 20:45:03,512 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:10:14,754 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 21:10:14,774 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 21:10:14,775 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 21:10:14,775 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 21:10:14,777 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 21:10:14,777 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 21:10:14,779 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-22 21:10:14,786 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 21:10:14,787 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 21:10:14,788 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 21:10:14,790 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 21:10:14,792 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 21:10:14,793 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-22 21:10:14,794 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-22 21:10:14,796 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-22 21:10:14,797 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 21:10:14,801 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 21:10:14,802 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-22 21:10:16,377 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:10:16,379 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:10:16,380 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:169)
2016-11-22 21:10:16,380 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:10:16,383 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:10:16,383 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:10:16,384 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:155)
2016-11-22 21:10:16,384 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:10:16,385 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:163)
2016-11-22 21:10:16,386 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:10:16,387 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:10:16,388 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:10:16,389 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:117)
2016-11-22 21:10:16,389 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:10:16,392 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:10:16,393 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:10:16,394 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:103)
2016-11-22 21:10:16,395 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:10:16,395 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:111)
2016-11-22 21:10:16,396 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:10:16,399 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:10:16,402 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:10:16,403 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:10:16,405 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:10:16,407 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:10:16,408 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:10:16,408 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:155)
2016-11-22 21:10:16,409 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:10:16,410 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:10:16,411 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:10:16,412 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:103)
2016-11-22 21:10:16,412 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:25:14,781 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 21:25:14,804 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 21:25:14,807 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 21:25:14,808 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 21:25:14,811 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 21:25:14,813 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 21:25:14,815 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-22 21:25:14,820 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 21:25:14,822 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 21:25:14,824 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 21:25:14,826 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 21:25:14,827 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 21:25:14,828 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-22 21:25:14,829 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:62)
2016-11-22 21:25:14,831 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-22 21:25:14,832 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:38)
2016-11-22 21:25:14,836 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:47)
2016-11-22 21:25:14,837 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:77)
2016-11-22 21:25:16,619 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:25:16,620 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:25:16,622 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:169)
2016-11-22 21:25:16,623 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:25:16,624 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:25:16,624 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:25:16,625 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:155)
2016-11-22 21:25:16,625 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:25:16,626 [ INFO] service.ProductRegistrationServisSpring Weight may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:163)
2016-11-22 21:25:16,626 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:25:16,627 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:25:16,628 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:25:16,629 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:117)
2016-11-22 21:25:16,629 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:25:16,631 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:25:16,632 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:25:16,633 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:103)
2016-11-22 21:25:16,634 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:25:16,634 [ INFO] service.ProductRegistrationServisSpring Price may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:111)
2016-11-22 21:25:16,634 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:25:16,636 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:25:16,638 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:25:16,639 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:25:16,641 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:25:16,642 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:25:16,643 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:25:16,643 [ INFO] service.ProductRegistrationServisSpring Power may be only numbers at service.ProductRegistrationServisSpring.createParams(ProductRegistrationServisSpring.java:155)
2016-11-22 21:25:16,643 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:25:16,646 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:25:16,646 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:25:16,647 [ INFO] service.ProductRegistrationServisSpring Quantity may be only numbers at service.ProductRegistrationServisSpring.createProduct(ProductRegistrationServisSpring.java:103)
2016-11-22 21:25:16,647 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:46:06,647 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-22 21:46:06,662 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-22 21:46:06,662 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-22 21:46:06,663 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-22 21:46:06,667 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-22 21:46:06,668 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-22 21:46:06,668 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-22 21:46:06,676 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-22 21:46:06,685 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-22 21:46:06,687 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-22 21:46:06,689 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-22 21:46:06,689 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-22 21:46:06,691 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-22 21:46:06,692 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-22 21:46:06,694 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:88)
2016-11-22 21:46:06,695 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-22 21:46:06,700 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-22 21:46:06,701 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:88)
2016-11-22 21:46:08,256 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:46:08,257 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:46:08,260 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-22 21:46:08,261 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-23 22:31:37,046 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-23 22:31:37,063 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-23 22:31:37,063 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-23 22:31:37,064 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-23 22:31:37,064 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-23 22:31:37,065 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-23 22:31:37,065 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-23 22:31:37,069 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-23 22:31:37,070 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-23 22:31:37,071 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-23 22:31:37,074 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-23 22:31:37,075 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-23 22:31:37,076 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-23 22:31:37,082 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-23 22:31:37,085 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:88)
2016-11-23 22:31:37,086 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-23 22:31:37,089 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-23 22:31:37,090 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:88)
2016-11-23 22:31:38,806 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-23 22:31:38,812 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-23 22:31:38,814 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-23 22:31:38,817 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-23 22:56:13,637 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-23 22:56:13,652 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-23 22:56:13,653 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-23 22:56:13,654 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-23 22:56:13,655 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-23 22:56:13,655 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-23 22:56:13,657 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-23 22:56:13,661 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-23 22:56:13,663 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-23 22:56:13,663 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-23 22:56:13,664 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-23 22:56:13,665 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-23 22:56:13,666 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-23 22:56:13,667 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-23 22:56:13,668 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:88)
2016-11-23 22:56:13,669 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-23 22:56:13,674 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-23 22:56:13,675 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:88)
2016-11-23 22:56:15,186 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-23 22:56:15,188 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-23 22:56:15,190 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-23 22:56:15,193 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 08:38:14,758 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 08:38:14,793 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 08:38:14,793 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 08:38:14,794 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 08:38:14,794 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 08:38:14,796 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 08:38:14,797 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 08:38:14,802 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 08:38:14,807 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 08:38:14,808 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 08:38:14,809 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 08:38:14,810 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 08:38:14,811 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 08:38:14,813 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 08:38:14,815 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:88)
2016-11-24 08:38:14,817 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 08:38:14,820 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 08:38:14,821 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:88)
2016-11-24 08:38:17,781 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 08:38:17,786 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 08:38:17,787 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 08:38:17,789 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 09:49:24,017 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 09:49:24,032 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 09:49:24,032 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 09:49:24,033 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 09:49:24,033 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 09:49:24,034 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 09:49:24,034 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 09:49:24,038 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 09:49:24,041 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 09:49:24,043 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 09:49:24,044 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 09:49:24,045 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 09:49:24,046 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 09:49:24,047 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 09:49:24,048 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:88)
2016-11-24 09:49:24,050 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 09:49:24,053 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 09:49:24,054 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:88)
2016-11-24 09:49:25,507 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 09:49:25,509 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 09:49:25,511 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 09:49:25,514 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 09:50:17,455 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 09:51:55,995 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 09:55:33,249 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 09:55:33,260 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 10:04:24,607 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 10:04:24,661 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 10:04:24,682 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 10:04:24,687 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 10:05:36,715 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 10:05:36,830 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 10:05:36,893 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 10:05:36,898 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 10:45:55,812 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 10:45:55,825 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 10:46:05,655 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 10:46:05,677 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 10:46:05,716 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 10:46:05,718 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 10:46:05,719 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 10:46:05,721 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 10:50:43,585 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 10:50:43,594 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 10:50:43,604 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 10:50:43,607 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 10:50:43,608 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 10:50:43,611 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 10:51:10,815 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 10:51:10,831 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 10:51:10,833 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 10:51:10,835 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 10:53:33,728 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 10:53:33,735 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 10:53:33,735 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 10:53:33,736 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 10:53:33,736 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 10:53:33,738 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 10:53:33,739 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 10:53:33,742 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 10:53:33,752 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 10:53:33,753 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 10:53:33,757 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 10:53:33,758 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 10:53:33,762 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:88)
2016-11-24 10:53:33,763 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 10:53:33,764 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 10:53:33,764 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:88)
2016-11-24 10:53:33,767 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 10:53:33,768 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 10:53:36,129 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 10:53:36,131 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 10:53:36,148 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 10:53:36,152 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 10:53:36,809 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 10:53:36,811 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 10:53:36,813 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 10:53:36,814 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 11:16:45,291 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 11:16:45,308 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 11:16:45,309 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:88)
2016-11-24 11:16:45,312 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 11:16:45,313 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 11:16:45,313 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 11:16:45,314 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 11:16:45,314 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 11:16:45,315 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 11:16:45,315 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 11:16:45,316 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 11:16:45,318 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 11:16:45,318 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 11:16:45,319 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:88)
2016-11-24 11:16:45,320 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 11:16:45,321 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 11:16:45,324 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 11:16:45,324 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 11:16:47,073 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 11:16:47,074 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 11:16:47,076 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 11:16:47,078 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 11:16:47,423 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 11:16:47,427 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 11:16:47,430 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 11:16:47,435 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 11:32:41,647 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 11:32:41,657 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 11:32:41,658 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:88)
2016-11-24 11:32:41,660 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 11:32:41,660 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 11:32:41,662 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 11:32:41,663 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 11:32:41,664 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 11:32:41,665 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 11:32:41,666 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 11:32:41,667 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 11:32:41,668 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 11:32:41,668 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 11:32:41,669 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:88)
2016-11-24 11:32:41,670 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 11:32:41,673 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 11:32:41,676 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 11:32:41,677 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 11:32:42,792 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 11:32:42,794 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 11:32:42,796 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 11:32:42,798 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 11:32:43,141 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 11:32:43,155 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 11:32:43,162 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 11:32:43,166 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 11:48:19,158 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 11:48:19,172 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 11:48:19,173 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:88)
2016-11-24 11:48:19,186 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 11:48:19,188 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 11:48:19,188 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 11:48:19,189 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 11:48:19,190 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 11:48:19,191 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 11:48:19,192 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 11:48:19,193 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 11:48:19,194 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 11:48:19,195 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 11:48:19,196 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:88)
2016-11-24 11:48:19,197 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 11:48:19,198 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 11:48:19,205 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 11:48:19,206 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 11:48:20,915 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 11:48:20,918 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 11:48:20,922 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 11:48:20,924 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 11:48:21,463 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 11:48:21,466 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 11:48:21,467 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 11:48:21,475 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 13:24:08,444 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 13:24:08,491 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 13:24:08,492 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:88)
2016-11-24 13:24:08,500 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 13:24:08,502 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 13:24:08,503 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 13:24:08,505 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 13:24:08,506 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 13:24:08,507 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 13:24:08,508 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 13:24:08,509 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 13:24:08,511 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 13:24:08,512 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 13:24:08,513 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:88)
2016-11-24 13:24:08,515 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 13:24:08,516 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 13:24:08,519 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 13:24:08,520 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 13:24:10,588 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 13:24:10,590 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 13:24:10,594 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 13:24:10,597 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 13:24:11,273 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 13:24:11,277 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 13:24:11,279 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 13:24:11,282 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 16:15:07,476 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 16:15:07,483 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 16:15:07,483 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:88)
2016-11-24 16:15:07,486 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 16:15:07,487 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 16:15:07,487 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 16:15:07,488 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 16:15:07,488 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 16:15:07,489 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 16:15:07,489 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 16:15:07,490 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 16:15:07,491 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 16:15:07,492 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 16:15:07,494 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:88)
2016-11-24 16:15:07,509 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 16:15:07,510 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 16:15:07,513 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 16:15:07,514 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 16:15:09,551 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 16:15:09,553 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 16:15:09,558 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 16:15:09,561 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 16:15:10,223 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 16:15:10,244 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 16:15:10,249 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 16:15:10,252 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 16:35:01,307 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 16:35:01,313 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 16:35:01,313 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:88)
2016-11-24 16:35:01,316 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 16:35:01,320 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 16:35:01,324 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 16:35:01,325 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 16:35:01,326 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 16:35:01,327 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 16:35:01,327 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 16:35:01,328 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 16:35:01,329 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 16:35:01,329 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 16:35:01,330 [ INFO] service.AddProductsToCardSeviceSpring Total price of product on cart have been changed at service.AddProductsToCardSeviceSpring.getTotalPriceOfProductsOnCart(AddProductsToCardSeviceSpring.java:88)
2016-11-24 16:35:01,331 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 16:35:01,332 [ INFO] service.AddProductsToCardSeviceSpring Quantity of products on cart have been changed at service.AddProductsToCardSeviceSpring.getQuantityOfProducOnCard(AddProductsToCardSeviceSpring.java:72)
2016-11-24 16:35:01,336 [ INFO] service.AddProductsToCardSeviceSpring add new prduct to Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:48)
2016-11-24 16:35:01,337 [ INFO] service.AddProductsToCardSeviceSpring Return new List of product in Cart at service.AddProductsToCardSeviceSpring.getListOgProductsOnCart(AddProductsToCardSeviceSpring.java:57)
2016-11-24 16:35:03,428 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 16:35:03,444 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 16:35:03,449 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 16:35:03,460 [ INFO] service.OrderSelectServiceSpring order list have been sorted at service.OrderSelectServiceSpring.getSortedOrdersList(OrderSelectServiceSpring.java:65)
2016-11-24 16:35:03,947 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 16:35:03,949 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 16:35:03,951 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
2016-11-24 16:35:03,958 [ INFO] httphendler.HttpResult Create new message for Client at httphendler.HttpResult.setMessage(HttpResult.java:70)
